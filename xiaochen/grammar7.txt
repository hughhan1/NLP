# Symbols in the grammar are case-sensitive.
# 
# This grammar uses a convention that
#    - terminals are lowercase          (president)
#    - preterminals are capitalized     (Noun)
#    - other nonterminals are all-caps  (NP)
# 
# This convention just makes grammars more readable to humans.  Thus:
#
#    - When *you* are writing grammars in questions 3 and 6, you should 
#      follow this convention unless you have a good reason not to.  
#
#    - But your *program* should still work with grammars that don't
#      follow this convention.  So how can your program reliably tell
#      the difference between terminal and nonterminal symbols?  If
#      there is at least one rule for rewriting a symbol, then that
#      symbol is a nonterminal and should be rewritten.
#######################

# Rules for creating full sentences.

2	ROOT	S .
1	ROOT	S !
1	ROOT	is it true that S ?     # mixing terminals and nonterminals is ok.
2   ROOT    Aux S_ori ?                 # this rule is for (7b)

# The basic grammar rules.  Here's what the abbreviations stand for:
#    NP = noun phrase
#    PP = prepositional phrase
#    Det = determiner that is used before non-vowel sound
#    Det_vo = determiner that is used before vowel sound
#    Prep = preposition
#    Conj = conjunction
#    Aux = auxiliary verb

#    NOUN = noun, no matter what sound it begins with
#    Noun = noun that do not begin with vowel sound
#    Noun_vo = noun that begin with vowel sound
#    Noun_pro = proper noun

#    ADJ = adjective, no matter what sound it begins with
#    Adj = adjective that do not begin with vowel sound
#    Adj_vo = adjective that begin with vowel sound

#    ADV = adverb, no matter what sound it begins with
#    Adv = adverb that do not begin with vowel sound
#    Adv_vo = adverb that begin with vowel sound

#                       Past Tense      Present Tense      
#    Transitive Verb     V_tr_ed         V_tr_ori          # "ori" for "original"
#    Intransitive Verb   V_in_ed         V_in_ori          
#    Sentence            S               S_ori           
#    Verb Phrase         VP_pas          VP_pre            
#    Noun Clause         NC_pas          NC_pre            # "NC_pre" will not appear in this version of grammar.

1	S	NP VP_pas
0.1 S   NC_pas VP_pas
0.1 S   it V_tr_ed NP NC_pas

1	S_ori	NP VP_pre               # these three rules are for (7b)
0.1 S_ori   NC_pas VP_pre
0.1 S_ori   it V_tr_ori NP NC_pas

1	VP_pas  V_tr_ed NP
0.2 VP_pas  V_tr_ed NC_pas
0.4 VP_pas  V_in_ed
0.3 VP_pas  VP_pas PP
0.3 VP_pas  VP_pas Conj VP_pas

1	VP_pre  V_tr_ori NP             # these five rules are for (7b)
0.2 VP_pre  V_tr_ori NC_pas
0.4 VP_pre  V_in_ori
0.3 VP_pre  VP_pre PP
0.3 VP_pre  VP_pre Conj VP_pre

1   NC_pas    that S

1	NP	Det Noun
0.5 NP  Det_vo Noun_vo      # this rule is for (7a)
0.2	NP	NP PP
0.6 NP  Noun_pro
0.2 NP  NP Conj NP

1	PP	Prep NP

1.5 Noun	Adj Noun
0.7 Noun_vo Adj_vo NOUN  # this rule is for (7a)
2   NOUN   Noun
1   NOUN   Noun_vo

1   Adj Adv Adj
1   Adj_vo  Adv_vo ADJ   # these three rules are for (7a)
1   ADJ Adj
1   ADJ Adj_vo

# Vocabulary.  Your program can see that "ate" is a terminal
# symbol because there exists no rule for rewriting it.
# Any symbol that can rewrite as a terminal (or a string of 
# terminals, like "chief of staff") is called a "preterminal."  Notice 
# that a preterminal is a special kind of nonterminal.

1	V_tr_ed     ate
1	V_tr_ed     wanted
1	V_tr_ed     kissed
1	V_tr_ed     understood
0.3	V_tr_ed     pickled

1	V_tr_ori    eat         # these five rules are for (7b)
1	V_tr_ori	want
1	V_tr_ori	kiss
1	V_tr_ori	understand
0.3	V_tr_ori	pickle

1   V_in_ed     sighed
1   V_in_ed     jumped
1   V_in_ed     flew

1   V_in_ori    sigh        # these three rules are for (7b)
1   V_in_ori    jump
1   V_in_ori    fly

1   Aux did                 # these three rules are for (7b)
1   Aux will
1   Aux can

1	Det	the             
2	Det	a
0.5	Det	every

1	Det_vo	the             # "the" and "every" belong to both "Det" and "Det_vo"
2	Det_vo	an
0.5	Det_vo	every

1	Noun	president
1	Noun	sandwich
0.3	Noun	pickle
0.5	Noun	chief of staff
1	Noun	floor

1   Noun_vo apple
1   Noun_vo idea

1   Noun_pro    Sally
1   Noun_pro    Xiaochen

1   Conj    and
0.5 Conj    or

1.5	Adj	fine
1	Adj	delicious
1	Adj	perplexed
1	Adj	pickled

1   Adj_vo  ambivalent
1   Adj_vo  eloquent

1   Adv very
1   Adv somewhat

1   Adv_vo extremely        

1	Prep	with
1.5	Prep	on
1	Prep	under
1.5	Prep	in
